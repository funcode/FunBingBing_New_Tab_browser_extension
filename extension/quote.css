/* Quote hover/lift component */
.quote {
    position: fixed;
    bottom: 20px; /* base, JS adds offset */
    left: 50%;
    transform: translateX(-50%);
    width: 70%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 1.2rem;
    color: #fff;
    -webkit-user-select: text;
    user-select: text;
    z-index: 100;
    pointer-events: none; /* let only inner interactive zone catch events */
}

.app-dash {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-family: 'FangSong', 'STFangsong', 'STSong', 'SimSun', 'serif';
    font-style: italic;
    width: 70%;
    --lift: 34px; /* fallback vertical lift */
}

/* Narrow trigger hotspot (center bottom band). Do not shrink visible text width. */
.quote-hotspot {
    height: 1.2rem; /* keep compact; lift space handled by extended hover zone */
    position: fixed;
    width: 70%;
    pointer-events: auto;
}

/* Ensure the rest of app-dash doesn't count for hover (except hotspot & popup). */
.app-dash.pointer-events-none { pointer-events: none; }
.app-dash .quote-body { pointer-events: none; }
.app-dash .below { pointer-events: none; }

/* Invisible extended hover zone to avoid flicker when moving */
/* Extended hover zone to reduce flicker when cursor travels upward */
.app-dash::before {
    content: '';
    position: absolute;
    left: -24px;
    right: -24px;
    bottom: calc(-1 * var(--lift)); /* reserve space for lifted state */
    top: -12px; /* slight top extension */
    /* pointer-events: none; */ /* 原因: 这会让扩展区域无法维持 :hover, 导致闪烁 */
    pointer-events: auto; /* 允许该扩展区域保持 hover，防止 quote 上下跳动 */
}

.quote-body {
    display: inline-block;
    font-size: 1.3rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    width: auto;
    cursor: pointer;
    padding-right: .5ch; /* prevent last glyph (e.g. ”) from clipping when ellipsis not applied */
    /* Smooth fade for the inline body when leaving */
    transition: opacity .18s ease;
}

.below {
    position: fixed; /* detach so its bottom aligns to viewport */
    left: 50%;
    bottom: 12px; /* distance from screen bottom */
    transform: translate(-50%, 40px) scale(.96); /* slide up & scale on show */
    opacity: 0;
    pointer-events: none;
    transition: opacity .28s ease, transform .34s cubic-bezier(.4,0,.2,1);
    width: max(320px, 70%);
    max-width: 880px;
    z-index: 1020; /* above quote trigger */
}

.quote-popup-inner {
    background: var(--panel-bg);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px);
    padding: 22px 28px 24px;
    border-radius: 16px;
    box-shadow: 0 10px 28px rgba(0,0,0,0.55);
    text-align: center;
    font-size: var(--panel-font-size);
    color: #c6cccc;
}

.quote-full-text {
    line-height: 1.3;
    white-space: normal;
    word-break: break-word;
    font-style: italic;
    font-size: var(--panel-font-size);
}

/* Open state (set by JS to avoid flicker) */
.quote.q-open .below {
    opacity: 1;
    transform: translate(-50%, 0) scale(1);
    pointer-events: auto;
}

.quote.q-open .quote-body {
    visibility: hidden;
    opacity: 0;
}
/* Normalize quote colors: keep link & caption same as quote text */
.quote a,
.quote a:visited,
.quote a:hover,
.quote a:active,
.quote a:focus {
    color: inherit; /* inherit #fff from .quote */
}

#quote-source {
    margin-top: 8px;
}

#quote-caption {
    color: inherit;
    font-size: var(--panel-font-size);
    margin-top: 4px;
}

/* Improve readability on bright backgrounds */
#quote-text,
#quote-source,
#quote-caption {
    text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);
}

/* Underline quote source only when it is a real link (has href) */
#quote-source-link {
    color: inherit;
    text-decoration: none;
}
#quote-source-link[href] {
    text-decoration: underline;
}
#quote-source-link[href]:hover,
#quote-source-link[href]:focus {
    text-decoration: underline;
}
